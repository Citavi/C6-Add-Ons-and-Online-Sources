<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="allOtherTitlesSubtitleLabel" xml:space="preserve">
    <value>2. All other references</value>
  </data>
  <data name="BackButton" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="copyOtherTitlesCheckboxText" xml:space="preserve">
    <value>Copy to target project</value>
  </data>
  <data name="FinishButton" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="ignoreOtherTitlesCheckboxText" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="mergeEssentialFieldsCheckboxText" xml:space="preserve">
    <value>References with a 100% match in main fields</value>
  </data>
  <data name="mergeSameIdCheckboxText" xml:space="preserve">
    <value>References with the same ID (ISBN, DOI, PubMedID, PMC, arXiv)</value>
  </data>
  <data name="mergeStaticIdCheckboxText" xml:space="preserve">
    <value>References with the same StaticID</value>
  </data>
  <data name="NextButton" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="PushAndMergeCommandButtonText" xml:space="preserve">
    <value>Copy knowledge items to a Citavi project</value>
  </data>
  <data name="ReferenceSelectionAll_Smart" xml:space="preserve">
    <value>{0:The reference|All {0} references} in this project</value>
  </data>
  <data name="ReferenceSelectionFiltered_Smart" xml:space="preserve">
    <value>The {0:reference|{0} references} in the current selection</value>
  </data>
  <data name="ReferenceSelectionSelected_Smart" xml:space="preserve">
    <value>{0:The selected reference|The {0} selected references}</value>
  </data>
  <data name="TitleSelectionMergeSubtitleLabel" xml:space="preserve">
    <value>1. References that should be merged in the target project</value>
  </data>
  <data name="TitleSelectionTabSettingsLabel" xml:space="preserve">
    <value>Restrictions / Settings</value>
  </data>
  <data name="TitleSelectionTabTitle" xml:space="preserve">
    <value>Select reference</value>
  </data>
  <data name="CustomFields" xml:space="preserve">
    <value>Custom fields</value>
  </data>
  <data name="KnowledgeItemsLabel" xml:space="preserve">
    <value>Knowledge items</value>
  </data>
  <data name="ProjectNameLabel" xml:space="preserve">
    <value>Project name</value>
  </data>
  <data name="MergeReferenceOptionComplete" xml:space="preserve">
    <value>Complete all</value>
  </data>
  <data name="MergeReferenceOptionCompleteIfEmpty" xml:space="preserve">
    <value>Complete if empty</value>
  </data>
  <data name="MergeReferenceOptionIgnore" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="MergeReferenceOptionOverride" xml:space="preserve">
    <value>Override</value>
  </data>
  <data name="NewProjectButtonText" xml:space="preserve">
    <value>New project ...</value>
  </data>
  <data name="OpenProjectButtonText" xml:space="preserve">
    <value>Open project ...</value>
  </data>
  <data name="CloneKnowledgeItemOnMatchText" xml:space="preserve">
    <value>Copy, duplicate if same creator and creation date.</value>
  </data>
  <data name="IgnoreKnowledgeItemOnMatchText" xml:space="preserve">
    <value>Copy, ignore if same creator and creation date.</value>
  </data>
  <data name="CantMoveItemsInTheSameProject" xml:space="preserve">
    <value>Items cannot be copied within the same project.</value>
  </data>
  <data name="HelpText_MergeTitlesWithEqualEssentialFields" xml:space="preserve">
    <value>{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs24  \fs22\lang7 References with a 100% match in main fields\par
The rule will apply if the contents of the following fields are identical for the reference in the source project and the target project:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-358\li721\sa200\sl240\slmult1 Reference type\par
{\pntext\f1\'B7\tab}Author\par
{\pntext\f1\'B7\tab}Title\par
{\pntext\f1\'B7\tab}Subtitle\par
{\pntext\f1\'B7\tab}Year\par
{\pntext\f1\'B7\tab}Edition\par
}</value>
    <comment>EN fehlt</comment>
  </data>
  <data name="HelpText_MergeTitlesWithEqualStaticId" xml:space="preserve">
    <value>{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs24  \fs22\lang7 References with the same StaticID\par
Whenever a reference is copied from a source project to a target project, it will be given a new internal ID.\line\line The original ID from the source project is recorded in the internal \i StaticID\i0  field. This lets Citavi see which references in the source and target projects belong together.\par
}</value>
    <comment>EN fehlt</comment>
  </data>
  <data name="HelpText_MergeTitlesWithSameId" xml:space="preserve">
    <value>{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs24  \fs22\lang7 References with the same ID\par
Only the reference's IDs will be compared. The rule will apply to a reference with multiple IDs if at least one ID is the same.\par
}</value>
    <comment>EN fehlt</comment>
  </data>
  <data name="HelpText_AllOtherTitles" xml:space="preserve">
    <value>{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs24  \b\fs22\lang7 All other references\b0\par
All other references are the references that meet the following criteria:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 no reference with the same ID in the target project\par
{\pntext\f1\'B7\tab}no reference with a 100% match in main fields in the target project\par
{\pntext\f1\'B7\tab}no reference with the same StaticID in the target project\par

\pard\sa200\sl276\slmult1 References that were \i not \i0 selected for merging under step 1 are also considered \i other references\i0 . \par
}</value>
    <comment>EN fehlt</comment>
  </data>
  <data name="HelpText_SelectDataToCopy" xml:space="preserve">
    <value>{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sl276\slmult1\f0\fs24  \fs22\lang7 Data to include along with copied references\par
\par
Your selection includes references to be copied to the target project.\par
\par
The following information will be copied to the target project along with the references:\par
\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sl276\slmult1 Knowledge items\par
{\pntext\f1\'B7\tab}Locations (including PDF attachments)\par

\pard\sl276\slmult1\par
Which additional data would you like to copy for these references? \par
}</value>
  </data>
  <data name="SelectProjectTabTitle" xml:space="preserve">
    <value>Select target project</value>
  </data>
  <data name="MergeTitlesTabTitle" xml:space="preserve">
    <value>References to be merged in the target project:
which data should be merged?</value>
  </data>
</root>
