//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SwissAcademic.Addons.ImportJournals.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ImportJournalsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ImportJournalsResources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SwissAcademic.Addons.ImportJournals.Properties.ImportJournalsResources", typeof(ImportJournalsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap addon {
            get {
                object obj = ResourceManager.GetObject("addon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] Diese Datei enthält ungültige Zeichen und kann daher nicht importiert werden. ähnelt.
        /// </summary>
        internal static string FileMacroNotSupportedCharactersMessage {
            get {
                return ResourceManager.GetString("FileMacroNotSupportedCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] Text Dateien (*.txt)|*.txt|Alle Dateien (*.*)|*.* ähnelt.
        /// </summary>
        internal static string FileMacroOpenFileDialogFilters {
            get {
                return ResourceManager.GetString("FileMacroOpenFileDialogFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] Wählen Sie die zu importierende Zeitschriften-Datei aus (Text-Format) ähnelt.
        /// </summary>
        internal static string FileMacroOpenFileDialogSubject {
            get {
                return ResourceManager.GetString("FileMacroOpenFileDialogSubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] Es wurde(n) {0} Zeitschrift(en) eingelesen.
        ///(Dubletten wurden unterdrückt.) ähnelt.
        /// </summary>
        internal static string FileMacroResultMessage {
            get {
                return ResourceManager.GetString("FileMacroResultMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] aus Datei… ähnelt.
        /// </summary>
        internal static string ImportJournalsByFileCommandText {
            get {
                return ResourceManager.GetString("ImportJournalsByFileCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] von PubMed… ähnelt.
        /// </summary>
        internal static string ImportJournalsByPubMedCommandText {
            get {
                return ResourceManager.GetString("ImportJournalsByPubMedCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] von der Universität von British Columbia… ähnelt.
        /// </summary>
        internal static string ImportJournalsByWoodwardLibraryCommandText {
            get {
                return ResourceManager.GetString("ImportJournalsByWoodwardLibraryCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die [en] Zeitschriftenliste importieren ähnelt.
        /// </summary>
        internal static string ImportJournalsMenu {
            get {
                return ResourceManager.GetString("ImportJournalsMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred importing the journal data:
        ///
        ///{0} ähnelt.
        /// </summary>
        internal static string MacroImportingErrorMessage {
            get {
                return ResourceManager.GetString("MacroImportingErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not read file from {0}: {1}&quot; ähnelt.
        /// </summary>
        internal static string PubMedMacroReadErrorMessage {
            get {
                return ResourceManager.GetString("PubMedMacroReadErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} journal(s) were imported (not counting duplicates) ähnelt.
        /// </summary>
        internal static string PubMedMacroResultMessage {
            get {
                return ResourceManager.GetString("PubMedMacroResultMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} journal(s) were imported (not counting duplicates)
        ///{1} reference(s) were changed. ähnelt.
        /// </summary>
        internal static string WoodwardMacroResultMessage {
            get {
                return ResourceManager.GetString("WoodwardMacroResultMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Would you like to update journal information for references in current selection (all references if no selection is active)? ähnelt.
        /// </summary>
        internal static string WoodwardMacroUpdateMessage {
            get {
                return ResourceManager.GetString("WoodwardMacroUpdateMessage", resourceCulture);
            }
        }
    }
}
